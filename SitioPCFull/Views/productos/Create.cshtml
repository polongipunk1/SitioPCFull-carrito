@model SitioPCFull.Models.productos
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center text-white pt-3">Agregar nuevo producto</h2>


@using (Html.BeginForm("Create", "productos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="container-fluid text-white pt-4">
        <form>
            <div class="row">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-md-6">
                    @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese nombre del producto" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.procesador, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.procesador, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese nombre del procesador" } })
                        @Html.ValidationMessageFor(model => model.procesador, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.graficos, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.graficos, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese el nombre de la tarjeta grafica" } })
                        @Html.ValidationMessageFor(model => model.graficos, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.ram, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.ram, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese la cantidad de RAM" } })
                        @Html.ValidationMessageFor(model => model.ram, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.pantalla, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.pantalla, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese el tipo y resolución de pantalla" } })
                        @Html.ValidationMessageFor(model => model.pantalla, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.almacenamiento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.almacenamiento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese el almacenamiento" } })
                        @Html.ValidationMessageFor(model => model.almacenamiento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.bateria, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.bateria, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese las especificaciones de la batería" } })
                        @Html.ValidationMessageFor(model => model.bateria, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.so, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col">
                        @Html.EditorFor(model => model.so, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese el Sistema Operativo" } })
                        @Html.ValidationMessageFor(model => model.so, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.audio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.audio, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese las especificaciones de audio" } })
                        @Html.ValidationMessageFor(model => model.audio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.puertos, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.puertos, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese las especificaciones de puertos" } })
                        @Html.ValidationMessageFor(model => model.puertos, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.conectividad, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.conectividad, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese las especificaciones de conectividad" } })
                        @Html.ValidationMessageFor(model => model.conectividad, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese el precio" } })
                        @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.existencias, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @Html.EditorFor(model => model.existencias, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ingrese la cantidad que dispone" } })
                        @Html.ValidationMessageFor(model => model.existencias, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col">
                        @*Html.EditorFor(model => model.img, new { htmlAttributes = new { @class = "form-control", @placeholder="Ingrese la URL de la imagen" } })*@
                        <input type="file" accept=".png,.PNG" name="imageload" required class="form-control" />
                        @Html.ValidationMessageFor(model => model.img, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group m-3">
                    <div class="col-md-offset-2 col-md-12">
                        <button type="submit" value="Agregar Producto" class="btn btn-success">Agregar Producto</button>
                    </div>
                </div>
                <div class="form-group mt-3">
                    <div class="col-md-offset-2 col-md-12">
                        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-outline-info" })
                    </div>
                </div>
            </div>
        </form>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}