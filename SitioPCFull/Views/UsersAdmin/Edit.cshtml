@model IdentitySample.Models.EditUserViewModel

@{
    ViewBag.Title = "Edit";
    var listado = new List<SelectListItem>() {
        new SelectListItem()
        {
            Text = "Ciudad de México",
            Value = "Ciudad de México"
        },
        new SelectListItem()
        {
            Text = "Estado de México",
            Value = "Estado de México",
        }
    };
}

<h2 class="text-center text-warning pt-3">Editar cuenta</h2>
<div class="container-fluid text-white text-center">
    <div class="row mt-5 justify-content-center align-items-center">
        <div class="col-sm-4 text-center">
            <div class="row">
                <div class="col">
                    <section class="shadow-form p-2">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()


                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.Id)

                            <div class="">
                                @Html.LabelFor(model => model.Nombre, new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-1">
                                    @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control text-center font-weight-bold" })
                                    @Html.ValidationMessageFor(model => model.Nombre)
                                </div>
                            </div>
                            <div class="">
                                @Html.LabelFor(model => model.Apellidos, new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-1">
                                    @Html.TextBoxFor(m => m.Apellidos, new { @class = "form-control text-center font-weight-bold" })
                                    @Html.ValidationMessageFor(model => model.Apellidos)
                                </div>
                            </div>
                            <div class="">
                                @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-1">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control text-center font-weight-bold" })
                                    @Html.ValidationMessageFor(model => model.UserName)
                                </div>
                            </div>
                            <div class="">
                                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-1">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control text-center font-weight-bold" })
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>
                            <div class="">
                                @Html.LabelFor(model => model.Direccion, new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-1">
                                    @Html.TextBoxFor(m => m.Direccion, new { @class = "form-control text-center font-weight-bold" })
                                    @Html.ValidationMessageFor(model => model.Direccion)
                                </div>
                            </div>
                            <div class="">
                                @Html.LabelFor(model => model.Colonia, new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-1">
                                    @Html.TextBoxFor(m => m.Colonia, new { @class = "form-control text-center font-weight-bold" })
                                    @Html.ValidationMessageFor(model => model.Colonia)
                                </div>
                            </div>
                            <div class="">
                                @Html.LabelFor(m => m.Region, new { @class = "col-md-12 control-label" })
                                <div class="col-md-12 mb-1">
                                    @Html.DropDownList("region", listado, new { @class = "form-control btn-secondary" })
                                    @Html.ValidationMessageFor(m => m.Region, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="">
                                @Html.LabelFor(model => model.CP, new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-1">
                                    @Html.TextBoxFor(m => m.CP, new { @class = "form-control text-center font-weight-bold" })
                                    @Html.ValidationMessageFor(model => model.CP)
                                </div>
                            </div>
                            <div class="">
                                @Html.LabelFor(model => model.Telefono, new { @class = "control-label col-md-12" })
                                <div class="col-md-12 mb-1">
                                    @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control text-center font-weight-bold" })
                                    @Html.ValidationMessageFor(model => model.Telefono)
                                </div>
                            </div>

                            <div class="">
                                @Html.Label("Seleccionar rol para el usuario:", new { @class = "control-label col-md-12" })
                                <span class=" col-md-12 mb-1">
                                    @foreach (var item in Model.RolesList)
                                    {
                                        <input type="checkbox" name="SelectedRole" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                                        @Html.Label(item.Value, new { @class = "control-label" })
                                    }
                                </span>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-12">
                                    <button type="submit" value="Guardar Cambios" class="btn btn-lg btn-success btn-block">Guardar Cambios</button>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-12">
                                    @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-lg btn-outline-info btn-block" })
                                </div>
                            </div>
                        }
                    </section>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
